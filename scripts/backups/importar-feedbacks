#!/usr/bin/env python
# coding=utf-8

import sys
import json
import os
import argparse

def import_from_file(file):
    try:
        data = file.read()
        if (not data.strip()):
            print >> sys.stderr, "Nenhuma entrada foi informada"
            exit(1)

        try:
            feedbacks_json = json.loads(data)
        except Exception as e:
            print >> sys.stderr, "Erro ao carregar dados, formato JSON não é válido"
            print >> sys.stderr, e
            exit(1)

        if not feedbacks_json:
            print >> sys.stderr, "Entrada vazia, não há nenhum feedback listado"
            exit(1)

        bulk_request_item_template = """{{ "update" : {{ "_index" : "gds-persistente", "_type" : "feedback", "_id": "{0}" }} }}
        {{ "doc" : {1} }}"""

        full_request = [bulk_request_item_template.format(
            it["_id"], json.dumps(it["doc"])) for it in feedbacks_json]
        full_request = '\n'.join(full_request)

        try:
            request_cmd = """curl -s -XPUT "localhost:9200/gds-persistente/_bulk" -d '{0}'""".format(
                full_request)
            print os.popen(request_cmd).read()

        except Exception as e:
            print >> sys.stderr, "Problemas durante a importação, detalhes:"
            print >> sys.stderr, e
            exit(1)

    except Exception as e:
        print "Erro inesperado. Detalhes:"
        print >> sys.stderr, e
        exit(1)

def prepare_arguments():
    parser = argparse.ArgumentParser(description="Importa feedbacks exportados do elastic search.")
    parser.add_argument('file', help="Informa arquivo de importação de entrada, ou '-' para stdin", type=argparse.FileType('r'))
    return parser.parse_args()

def main():
    args = prepare_arguments()
    import_from_file(args.file)

if __name__ == '__main__':
    main();
