#!/usr/bin/env python
# coding=utf-8

import json
import os
import sys
import argparse

def extrai_opinioes(retorno_str):
    opinioes_list = []
    try:
        opinioes_json = json.loads(retorno_str)
        opinioes_list = [{"_id": it["_id"], "doc": it['_source']}
                          for it in opinioes_json['hits']['hits']]
    except Exception as e:
        print >> sys.stderr, "Problemas ao processar dados retornados pelo Elasticsearch: {0}".format(
            retorno_str)
        print >> sys.stderr, e

    return opinioes_list


def executa_primeiro_request():
    importacao_cmd = 'curl -s -XGET "localhost:9200/pds-persistente/_search?scroll=1m&q=opiniao:*"'
    return os.popen(importacao_cmd).read()


def extrai_scroll_id(retorno_str):
    _id = json.loads(retorno_str)['_scroll_id']
    return _id


def executa_scroll_request(scroll_id):
    comando_scroll = "curl -XGET -s 'localhost:9200/_search/scroll?scroll=1m' -d '{0}'".format(
        scroll_id)
    return os.popen(comando_scroll).read()

def termina_scroll(scroll_id):
    comando_termino = "curl -XDELETE -s 'localhost:9200/_search/scroll' -d '{0}'".format(
        scroll_id)
    os.popen(comando_termino).read()

def prepare_arguments():
    parser = argparse.ArgumentParser()
    parser.add_argument('file', help="Define onde arquivo deve ser exportado, ou '-' para saída padrão (stdout)", type=argparse.FileType('w'))
    return parser.parse_args()

def executa_exportacao(output):
    try:
        retorno = executa_primeiro_request()
        opinioes_tmp = extrai_opinioes(retorno)
        opinioes = opinioes_tmp

        if (opinioes_tmp):
            while (opinioes_tmp):
                scroll_id = extrai_scroll_id(retorno)
                retorno = executa_scroll_request(scroll_id)
                opinioes_tmp = extrai_opinioes(retorno)
                opinioes = opinioes + opinioes_tmp
            termina_scroll(scroll_id)
    except Exception as e:
        print >> sys.stderr, "Erro insperado, detalhes:"
        print >> sys.stderr, e
        exit(1)

    print >> output, json.dumps(opinioes)

def main():
    args = prepare_arguments()
    executa_exportacao(args.file)

if __name__ == '__main__':
    main()
