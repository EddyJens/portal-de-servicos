#!/usr/bin/python
# coding=utf-8

import json
import os
import sys


def extrai_feedbacks(retorno_str):
    feedbacks_list = []
    try:
        feedbacks_json = json.loads(retorno_str)
        feedbacks_list = [{"_id": it["_id"], "doc": it['_source']}
                          for it in feedbacks_json['hits']['hits']]
    except Exception as e:
        print >> sys.stderr, "Problemas ao processar dados retornados pelo Elasticsearch: {0}".format(
            retorno_str)
        print >> sys.stderr, e

    return feedbacks_list


def executa_primeiro_request():
    importacao_cmd = 'curl -s -XGET "localhost:9200/gds-persistente/_search?scroll=1m&q=feedback:*"'
    return os.popen(importacao_cmd).read()


def extrai_scroll_id(retorno_str):
    _id = json.loads(retorno_str)['_scroll_id']
    return _id


def executa_scroll_request(scroll_id):
    comando_scroll = "curl -XGET -s 'localhost:9200/_search/scroll?scroll=1m' -d '{0}'".format(
        scroll_id)
    return os.popen(comando_scroll).read()

def termina_scroll(scroll_id):
    comando_termino = "curl -XDELETE -s 'localhost:9200/_search/scroll' -d '{0}'".format(
        scroll_id)
    os.popen(comando_termino).read()


def main():
    try:
        retorno = executa_primeiro_request()
        feedbacks_tmp = extrai_feedbacks(retorno)
        feedbacks = feedbacks_tmp

        if (feedbacks_tmp):
            while (feedbacks_tmp):
                scroll_id = extrai_scroll_id(retorno)
                retorno = executa_scroll_request(scroll_id)
                feedbacks_tmp = extrai_feedbacks(retorno)
                feedbacks = feedbacks + feedbacks_tmp
            termina_scroll(scroll_id)
    except Exception as e:
        print >> sys.stderr, "Erro insperado, detalhes:"
        print >> sys.stderr, e
        exit(1)

    print json.dumps(feedbacks)

if __name__ == '__main__':
    main()
